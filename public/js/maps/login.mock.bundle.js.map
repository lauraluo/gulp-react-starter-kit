{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/process/browser.js","node_modules/react-addons-update/index.js","src/components/login/MockComponent.jsx","src/components/login/RootComponent.jsx","src/login.mock.js"],"names":[],"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","file":"../../mockExamples/login.mock.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule update\n */\n\n /* global hasOwnProperty:true */\n\n'use strict';\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\n\nfunction shallowCopy(x) {\n  if (Array.isArray(x)) {\n    return x.concat();\n  } else if (x && typeof x === 'object') {\n    return Object.assign(new x.constructor(), x);\n  } else {\n    return x;\n  }\n}\n\nvar COMMAND_PUSH = '$push';\nvar COMMAND_UNSHIFT = '$unshift';\nvar COMMAND_SPLICE = '$splice';\nvar COMMAND_SET = '$set';\nvar COMMAND_MERGE = '$merge';\nvar COMMAND_APPLY = '$apply';\n\nvar ALL_COMMANDS_LIST = [\n  COMMAND_PUSH,\n  COMMAND_UNSHIFT,\n  COMMAND_SPLICE,\n  COMMAND_SET,\n  COMMAND_MERGE,\n  COMMAND_APPLY,\n];\n\nvar ALL_COMMANDS_SET = {};\n\nALL_COMMANDS_LIST.forEach(function(command) {\n  ALL_COMMANDS_SET[command] = true;\n});\n\nfunction invariantArrayCase(value, spec, command) {\n  invariant(\n    Array.isArray(value),\n    'update(): expected target of %s to be an array; got %s.',\n    command,\n    value\n  );\n  var specValue = spec[command];\n  invariant(\n    Array.isArray(specValue),\n    'update(): expected spec of %s to be an array; got %s. ' +\n    'Did you forget to wrap your parameter in an array?',\n    command,\n    specValue\n  );\n}\n\n/**\n * Returns a updated shallow copy of an object without mutating the original.\n * See https://facebook.github.io/react/docs/update.html for details.\n */\nfunction update(value, spec) {\n  invariant(\n    typeof spec === 'object',\n    'update(): You provided a key path to update() that did not contain one ' +\n    'of %s. Did you forget to include {%s: ...}?',\n    ALL_COMMANDS_LIST.join(', '),\n    COMMAND_SET\n  );\n\n  if (hasOwnProperty.call(spec, COMMAND_SET)) {\n    invariant(\n      Object.keys(spec).length === 1,\n      'Cannot have more than one key in an object with %s',\n      COMMAND_SET\n    );\n\n    return spec[COMMAND_SET];\n  }\n\n  var nextValue = shallowCopy(value);\n\n  if (hasOwnProperty.call(spec, COMMAND_MERGE)) {\n    var mergeObj = spec[COMMAND_MERGE];\n    invariant(\n      mergeObj && typeof mergeObj === 'object',\n      'update(): %s expects a spec of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      mergeObj\n    );\n    invariant(\n      nextValue && typeof nextValue === 'object',\n      'update(): %s expects a target of type \\'object\\'; got %s',\n      COMMAND_MERGE,\n      nextValue\n    );\n    Object.assign(nextValue, spec[COMMAND_MERGE]);\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_PUSH)) {\n    invariantArrayCase(value, spec, COMMAND_PUSH);\n    spec[COMMAND_PUSH].forEach(function(item) {\n      nextValue.push(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_UNSHIFT)) {\n    invariantArrayCase(value, spec, COMMAND_UNSHIFT);\n    spec[COMMAND_UNSHIFT].forEach(function(item) {\n      nextValue.unshift(item);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_SPLICE)) {\n    invariant(\n      Array.isArray(value),\n      'Expected %s target to be an array; got %s',\n      COMMAND_SPLICE,\n      value\n    );\n    invariant(\n      Array.isArray(spec[COMMAND_SPLICE]),\n      'update(): expected spec of %s to be an array of arrays; got %s. ' +\n      'Did you forget to wrap your parameters in an array?',\n      COMMAND_SPLICE,\n      spec[COMMAND_SPLICE]\n    );\n    spec[COMMAND_SPLICE].forEach(function(args) {\n      invariant(\n        Array.isArray(args),\n        'update(): expected spec of %s to be an array of arrays; got %s. ' +\n        'Did you forget to wrap your parameters in an array?',\n        COMMAND_SPLICE,\n        spec[COMMAND_SPLICE]\n      );\n      nextValue.splice.apply(nextValue, args);\n    });\n  }\n\n  if (hasOwnProperty.call(spec, COMMAND_APPLY)) {\n    invariant(\n      typeof spec[COMMAND_APPLY] === 'function',\n      'update(): expected spec of %s to be a function; got %s.',\n      COMMAND_APPLY,\n      spec[COMMAND_APPLY]\n    );\n    nextValue = spec[COMMAND_APPLY](nextValue);\n  }\n\n  for (var k in spec) {\n    if (!(ALL_COMMANDS_SET.hasOwnProperty(k) && ALL_COMMANDS_SET[k])) {\n      nextValue[k] = update(value[k], spec[k]);\n    }\n  }\n\n  return nextValue;\n}\n\nmodule.exports = update;\n","import React from 'react'\nimport Mock from 'mockjs'\nimport $ from \"jquery\"\n\nvar MockComponent = React.createClass({\n    getInitialState: function () {\n        return {initData: {}};\n    },\n    componentWillMount: function () {\n        var _this = this;\n        Mock.setup({timeout: '200-600'});\n\n        Mock.mock(/\\.json/, {\n            'list|1-10': [\n                {\n                    'id|+1': 1,\n                    'email': '@EMAIL'\n                }\n            ]\n        });\n\n        $\n            .ajax({url: 'hello.json', dataType: 'json'})\n            .done(function (data, status, jqXHR) {\n                _this.setState({initData: data});\n            });\n    },\n    render: function () {\n        //more than one child\n        var _this = this;\n        var childrenWithProps = React\n            .Children\n            .map(this.props.children, function (child) {\n                return React.cloneElement(child, {initData: _this.state.initData});\n            });\n\n        return <div>{childrenWithProps}</div>\n    }\n});\n\nexport default MockComponent;\n","import update from 'react-addons-update'\nimport React from 'react'\nimport _ from 'lodash'\n\n\nvar MyComponent = React.createClass({\n\tpropTypes: {\n\t\t// initData: React.PropTypes.array\n\t},\n\tgetInitialState: function () {\n\t\treturn {\n\t\t\tvalidation: {\n\t\t\t\tresult: true,\n\t\t\t\terrorMsg: null,\n\t\t\t\tchilds: [\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"account\",\n\t\t\t\t\t\trules: ['/^([\\w-_]+(?:\\.[\\w-_]+)*)@((?:[a-z0-9]+(?:-[a-zA-Z0-9]+)*)+\\.[a-z]{2,6})$/i'],\n\t\t\t\t\t\tresult: true,\n\t\t\t\t\t\terrorMsg: null\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tkey: \"password\",\n\t\t\t\t\t\trules: ['\\S{6,}'],\n\t\t\t\t\t\tresult: true,\n\t\t\t\t\t\terrorMsg: null\n\t\t\t\t\t}\n\t\t\t\t]\n\n\t\t\t},\n\t\t\tform: {\n\t\t\t\taccount: \"\",\n\t\t\t\tpassword: \"\"\n\t\t\t}\n\t\t}\n\t},\n\t_validation: function(){\n\t\t// var _this = this;\n\t\t// var mapResult = false;\n\t\t// var validationChild = _this.state.validation.child;\n\t\t// var fomrData = _this.form;\n\n\t\t// var testRule = function(rules,item){\n\t\t// \tvar results = rules.map(function(ruleString,index){\n\t\t// \t\tvar re = new RegExp(ruleString);\n\t\t// \t\treturn re.test(item);\n\t\t// \t});\n\n\t\t// \treturn results.indexOf(false) == -1;\n\t\t// };\n\n\t\t// validationChild.forEach((item,key) => {\n\t\t// \tvar result = testRule(item.rule,formData[key]);\n\t\t\t\n\n\t\t// });\n\t},\n\t_handleChange: function(e) {\n\t\tvar nodes = e.target.dataset.rel.split('.');\n\t\tvar phaserJsonString = \"{<%= sub %>}\";\n\t\tvar phaserObject = {};\n\t\tvar _this = this;\n\t\tvar subPhaserString;\n\t\tnodes.forEach(function(item,index){\n\t\t\tvar compiled = _.template(phaserJsonString);\n\t\t\tif(index == nodes.length -1 ){\n\t\t\t\tsubPhaserString = '\"'+item+'\"'+':'+ '\"'+e.target.value+'\"';\n\t\t\t\tphaserJsonString = compiled({ 'sub': subPhaserString });\n\t\t\t} else {\n\t\t\t\tsubPhaserString = '\"'+item+'\"'+':{<%= sub %>}';\n\t\t\t\tphaserJsonString = compiled({ 'sub': subPhaserString });\n\t\t\t}\n\t\t});\n\n\t\tphaserObject = JSON.parse(phaserJsonString);\n\t\t\n\t\tthis.setState({\n\t\t\tform: update(_this.state.form, {\n\t\t\t\t$merge: phaserObject.form\n\t\t\t})\n\t\t});\n\t},\n\t_submit: function () {\n\n\t},\n\trender: function () {\n\t\t// var _this = this;\n\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<div className=\"form-group  has-error\">\n\t\t\t\t\t<label htmlFor=\"exampleInputEmail1\">Account</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tname=\"account\"\n\t\t\t\t\t\tdata-rel=\"form.account\"\n\t\t\t\t\t\tvalue={ this.state.form.account }\n\t\t\t\t\t\tonChange={this._handleChange} \n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"exampleInputEmail1\"\n\t\t\t\t\t\tplaceholder=\"Email\" />\n\t\t\t\t\t<div className=\"help-block\">\n\t\t\t\t\t\t請輸入正確的帳號格式：name@abc.com\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t<label htmlFor=\"exampleInputPassword1\">Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\tdata-rel=\"form.password\"\n\t\t\t\t\t\tvalue={ this.state.form.password }\n\t\t\t\t\t\tonChange={this._handleChange} \n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"exampleInputPassword1\"\n\t\t\t\t\t\tplaceholder=\"Password\" />\n\t\t\t\t\t<div className=\"help-block\">\n\t\t\t\t\t\t請輸入正確的密碼格式：長度至少大於六\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<button type=\"submit\" className=\"btn btn-default\">Submit</button>\n\t\t\t</form>\n\t\t)\n\t}\n});\n\n\nexport default MyComponent;","import Login from './components/login/RootComponent';\nimport MockComponent from './components/login/MockComponent';\nimport ReactDOM from 'react-dom';\nimport React from 'react';\n\nReactDOM.render(\n\t<MockComponent>\n\t\t<Login/>\n\t</MockComponent>,\n\tdocument.getElementById('login')\n)"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}