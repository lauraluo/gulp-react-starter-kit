{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/components/core/Mixin.DialogRelayout.jsx","src/components/dialog/Dialog.jsx","src/components/dialog/DialogButton.jsx","src/components/dialog/DialogDemo.jsx","src/dialogDemo.js"],"names":[],"mappings":"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","file":"../../mockExamples/dialogDemo.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import $ from \"jquery\"\nimport React from 'react'\n\nfunction DialogRelayout(WrappedComponent, configs) {\n\n    configs = Object.assign({\n        root: '#GlobalContainer', //for body > div\n        modifierRootClass: 'dialog-opened', //modifier root\n        container: '.container', //for prevent page scroll\n        containerBody: '.container-body' //for positioning main content container\n    }, configs);\n\n    class MixiedComponentWithRelayout extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                data: null\n            };\n        }\n\n        _relayout() {\n            var root = $(configs.root),\n                container = $(configs.container),\n                containerBody = $(configs.containerBody),\n                posY = $(document).scrollTop();\n\n            if ((this.state.isOpened && root.hasClass(configs.toggleClass)) || (!this.state.isOpened && !root.hasClass(configs.toggleClass))) \n                return;\n\n            if (this.state.isOpened) {\n                //modifier root\n                root.toggleClass(configs.modifierRootClass);\n                //prevent page scroll for mobile\n                container.css({position: 'absolute'});\n                //positioning main content container\n                containerBody.css({\n                    position: 'fixed',\n                    top: -(posY)\n                });\n            } else {\n                //reset all\n                root.removeClass(configs.modifierRootClass);\n                container.removeAttr('style');\n                containerBody.removeAttr('style');\n                $(document).scrollTop(posY);\n            }\n\n        }\n\n        proc() {\n            console.log('proc');\n        }\n\n        componentDidMount() {\n            console.log('relayout componentDidMount');\n        }\n\n        componentWillReceiveProps() {\n            console.log('relayout componentWillReceiveProps');\n        }\n\n        shouldCompoentUpdate() {\n            console.log('relayout shouldCompoentUpdate');\n        }\n\n        componentWillUpdate() {\n            console.log('relayout componentWillUpdate');\n        }\n\n        componentWillUnmount() {\n            console.log('relayout componentWillUnmount');\n        }\n\n        componentWillMount() {\n            console.log('relayout componentWillMount');\n        }\n\n        componentDidUpdate() {\n            console.log('relayout componentDidUpdate');\n            // var root = $(configs.root),     container = $(configs.container),\n            // containerBody = $(configs.containerBody),     posY = $(document).scrollTop();\n            // if ((this.state.isOpened && root.hasClass(configs.toggleClass)) ||\n            // (!this.state.isOpened && !root.hasClass(configs.toggleClass)))     return; if\n            // (this.state.isOpened) {     //modifier root\n            // root.toggleClass(configs.modifierRootClass);     //prevent page scroll for\n            // mobile     container.css({position: 'absolute'});     //positioning main\n            // content container     containerBody.css({         position: 'fixed', top:\n            // -(posY)     }); } else { //reset all\n            // root.removeClass(configs.modifierRootClass); container.removeAttr('style');\n            //   containerBody.removeAttr('style'); $(document).scrollTop(posY); }\n        }\n\n        render() {\n            var props = Object.assign({}, this.props, {\n                ref: this.proc.bind(this),\n                _relayout: this._relayout\n            })\n\n            return <WrappedComponent {...props}/>\n        }\n    }\n\n    return MixiedComponentWithRelayout;\n}\nexport default DialogRelayout;","import Reflux from \"reflux\"\nimport React from 'react'\nimport $ from \"jquery\"\nimport DialogButton from \"./DialogButton\"\nimport DialogRelayoutMixin from \"../core/Mixin.DialogRelayout\"\n\nvar DialogActions = Reflux.createActions([\n    \"showDialog\",\n    \"showDialogYesNo\",\n    \"showDialogList\",\n    \"showDialogListYesNo\",\n    \"showDialogScene\",\n    \"showDialogToast\",\n    \"hideDialog\",\n    \"setDialogName\",\n    \"clearDialogName\"\n]);\n\nclass DialogStore extends Reflux.Store {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpened: false,\n            posY: 0,\n            type: 0,\n            title: '',\n            content: '',\n            buttons: [],\n            callbackFn: []\n        };\n        this.listenables = DialogActions;\n    }\n\n    _updateState() {\n        if (!this.state.isOpened && this.state.type != 0) {\n            this.state.posY = $(document).scrollTop();\n        }\n\n        this.state.isOpened = (this.state.type != 0);\n        this.trigger(this.state);\n    }\n\n    onShowDialog(title, content, button, confirmFn) {\n        this.state.type = 1;\n        this.state.title = title;\n        this.state.content = content;\n        this.state.buttons = [button];\n        this.state.callbackFn = [confirmFn];\n        this._updateState();\n    }\n\n}\n\nclass Dialog extends Reflux.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {}; // our store will add its own state to the component's\n        this.store = DialogStore; // <- just assign the store class itself\n        this.Content = () => (<div>default view</div>);\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        this.Content = nextState.content;\n    }\n\n    componentDidUpdate() {\n        this.props._relayout.bind(this);\n    }\n\n    _renderBody(extraPadding) {\n\n        var className = extraPadding ? 'dialog-box-body dialog-box-body-padding' : 'dialog-box-body';\n\n        if (typeof(this.state.content) === 'string') {\n            var content = this\n                .state\n                .content\n                .split('\\n')\n                .map(function (item, i) {\n                    return (\n                        <span key={'dialog-item' + i}>{item}<br/></span>\n                    );\n                });\n            return (\n                <div className={className} ref=\"content\">\n                    {content}\n                </div>\n            );\n        } else {\n            return (\n                <div className={className} ref=\"content\">\n                    {this.state.content}\n                </div>\n            );\n        }\n    }\n\n    _renderFooter() {\n\n        var classNames = ['dialog-button-block-primary'];\n\n        if (this.state.buttons.length == 2) {\n            classNames = ['dialog-button-inline', 'dialog-button-inline-primary']\n        }\n\n        var buttons = this\n            .state\n            .buttons\n            .map(function (name, i) {\n\n                return (<DialogButton\n                    key={i}\n                    name={name}\n                    className={classNames[i]}\n                    callback={this.state.callbackFn[i]}/>);\n            }.bind(this));\n\n        return (\n            <div className=\"dialog-box-footer\">{buttons}</div>\n        );\n    }\n\n    render() {\n        var dataAttr = {\n            'data-dialog-name': this.state.dialogName\n        };\n\n\n        return (\n            <div className=\"dialog\" {...dataAttr}>\n                <this.Content/>\n            </div>\n        )\n    }\n\n}\n\nvar MixiedDialog = DialogRelayoutMixin(Dialog);\n\nexport {MixiedDialog as default, DialogStore, DialogActions};\n","import React, {Component} from 'react'\nimport { DialogActions } from \"./Dialog\"\n\n\nclass DialogButton extends Component {\n    \n    _onClick () {\n\n        var isOverride = false;\n\n        if (this.props.callback) {\n            isOverride = this.props.callback();\n        }\n        \n        if (!isOverride && DialogActions) {\n            DialogActions.hideDialog();\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className} onClick={this._onClick }>{this.props.name}</div>\n        );\n    }\n}\n\nexport default DialogButton;","import React from 'react'\nimport {DialogActions} from \"./Dialog\"\nimport $ from \"jquery\";\n\nclass DialogDemo extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.subView = this.subView.bind(this);\n        this._openDialogA = this._openDialogA.bind(this);\n        this._openDialogB = this._openDialogB.bind(this);\n        this.submitCallback = this.submitCallback.bind(this);\n        this.viewA = {};\n        this.viewB = {};\n    }\n\n    submitCallback() {\n        alert(\"lalalalal\");\n        console.log(this.viewA);\n        // console.log(this.viewB);\n        $(this.viewA).fadeOut();\n    }\n\n    _subViewA = () => {\n        return (\n            <div ref={(subView)=> { this.viewA = subView}}>\n                <p className='title'>sub view A</p>\n                <input type=\"text\"/>\n                <button className='btn' onClick={this.submitCallback}>送出鈕</button>\n            </div>\n        )\n    }\n\n    _subViewB = () => {\n        return (\n            <div ref={(subView)=> {this.viewB = subView}}>\n                <p className='title'>sub view B</p>\n                <input type=\"text\"/>\n                <button className='btn' onClick={this.submitCallback}>送出鈕</button>\n            </div>\n        )\n    }\n\n    _openDialogA() {\n        DialogActions.showDialog(\"Dialog標題\", this._subViewA, \"button\", \"confirmFn\");\n    }\n\n    _openDialogB() {\n        DialogActions.showDialog(\"Dialog標題\", this._subViewB, \"button\", \"confirmFn\");\n    }\n\n    render() {\n        return (\n            <div className='dialogDemo'>\n                <button className='btn' onClick={this._openDialogA}>打開dialogA</button>\n                <button className='btn' onClick={this._openDialogB}>打開dialogB</button>\n            </div >\n        )\n    }\n}\nexport default DialogDemo","import React from 'react';\nimport Dialog from './components/dialog/Dialog';\nimport ReactDOM from 'react-dom';\nimport DialogDemo from './components/dialog/DialogDemo';\n\nReactDOM.render(\n    <DialogDemo/>, document.getElementById('main'))\nReactDOM.render(\n    <Dialog/>, document.getElementById('dialog'))"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}