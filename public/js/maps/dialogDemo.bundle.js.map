{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/components/core/Mixin.DialogRelayout.jsx","src/components/dialog/Dialog.jsx","src/components/dialog/DialogButton.jsx","src/components/dialog/DialogDemo.jsx","src/dialogDemo.js"],"names":[],"mappings":"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","file":"../../mockExamples/dialogDemo.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import $ from \"jquery\"\nimport React from 'react'\n\nfunction DialogRelayout(WrappedComponent, configs) {\n\n    configs = Object.assign({\n        root: '#GlobalContainer', //for body > div\n        modifierRootClass: 'dialog-opened', //modifier root\n        container: '.container', //for prevent page scroll\n        containerBody: '.container-body' //for positioning main content container\n    }, configs);\n\n    class MixiedComponentWithRelayout extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        _relayout() {\n            console.log(\"_relayout\");\n            var root = $(configs.root),\n                container = $(configs.container),\n                containerBody = $(configs.containerBody),\n                posY = $(document).scrollTop();\n\n            if ((this.state.isOpened && root.hasClass(configs.toggleClass)) || (!this.state.isOpened && !root.hasClass(configs.toggleClass))) \n                return;\n\n            if (this.state.isOpened) {\n                //modifier root\n                root.toggleClass(configs.modifierRootClass);\n                //prevent page scroll for mobile\n                container.css({position: 'absolute'});\n                //positioning container of main content in dialog background\n                containerBody.css({\n                    position: 'fixed',\n                    top: -(posY)\n                });\n            } else {\n                //reset all\n                root.removeClass(configs.modifierRootClass);\n                container.removeAttr('style');\n                containerBody.removeAttr('style');\n                $(document).scrollTop(posY);\n            }\n\n        }\n\n        proc() {\n            console.log('proc');\n        }\n\n        componentDidMount() {\n            console.log('relayout componentDidMount');\n        }\n\n        componentWillUnmount() {\n            console.log('relayout componentWillUnmount');\n        }\n\n        componentWillMount() {\n            console.log('relayout componentWillMount');\n        }\n\n\n        render() {\n\n            var props = Object.assign({}, this.props, {\n                ref: () => {\n                    this.proc.bind(this)\n                },\n                _relayout: this._relayout\n            })\n\n            return <WrappedComponent {...props}/>\n        }\n    }\n\n    return MixiedComponentWithRelayout;\n}\nexport default DialogRelayout;","import Reflux from \"reflux\"\nimport React from 'react'\nimport $ from \"jquery\"\nimport DialogButton from \"./DialogButton\"\nimport DialogRelayoutMixin from \"../core/Mixin.DialogRelayout\"\n\nvar DialogActions = Reflux.createActions([\n    \"showDialog\",\n    \"showDialogYesNo\",\n    \"showDialogList\",\n    \"showDialogListYesNo\",\n    \"showDialogScene\",\n    \"showDialogToast\",\n    \"hideDialog\",\n    \"setDialogName\",\n    \"clearDialogName\"\n]);\n\nclass DialogStore extends Reflux.Store {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpened: false,\n            posY: 0,\n            type: 0,\n            title: '',\n            content: '',\n            buttons: [],\n            didOpened: null,\n            willOpen: null,\n            didClosed: null\n\n        };\n        this.listenables = DialogActions;\n    }\n\n    _updateState() {\n        if (!this.state.isOpened && this.state.type != 0) {\n            this.state.posY = $(document).scrollTop();\n        }\n\n        this.state.isOpened = (this.state.type != 0);\n        this.trigger(this.state);\n    }\n\n    _checkConfigsInterface = (configs) => {\n        var result = true;\n\n        Object\n            .keys(configs)\n            .map((key, index) => {\n                var value = configs[key];\n\n                switch (key) {\n                    case \"title\":\n                        if (typeof value !== \"string\") {\n                            console.error(\"title should be a string\");\n                            result = false;\n                        }\n                        break;\n                    case \"content\":\n                        if (typeof value !== \"function\" && typeof value !== \"string\") {\n                            console.error(\"content should be a functional component or a string\");\n                            result = false;\n                        }\n                        break;\n                    case \"buttons\":\n                        if (Object.prototype.toString.call(value) !== '[object Array]') {\n                            console.error(\"buttons should be an Array\");\n                            result = false;\n                        }\n                        break;\n                    case \"didOpened\":\n                    case \"willOpen\":\n                    case \"didClosed\":\n                        if (typeof value !== \"function\") {\n                            console.error(\"callback should be an function\");\n                            result = false;\n                        }\n                        break;\n                    default:\n                        return;\n                }\n            });\n\n        return result;\n\n    }\n\n    onShowDialog = (configs = {\n        title: \"\",\n        content: {},\n        buttons: [],\n        didOpened: null\n    }) => {\n\n        if (!this._checkConfigsInterface(configs)) {\n            return;\n        }\n\n        this.state.type = 1;\n        this.state.title = configs.title;\n        this.state.content = configs.content;\n        this.state.buttons = configs.buttons;\n        this.state.didOpened = configs.didOpened;\n        this._updateState();\n    }\n\n    onHideDialog = () => {\n        this.state.type = 0;\n        this.state.title = '';\n        this.state.content = '';\n        this.state.buttons = [];\n\n        this._updateState();\n    }\n}\n\nclass Dialog extends Reflux.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {}; // our store will add its own state to the component's\n        this.store = DialogStore; // <- just assign the store class itself\n        this._BodyComponent = this\n            ._BodyComponent\n            .bind(this);\n        this._relayout = this\n            .props\n            ._relayout\n            .bind(this);\n    }\n\n    componentWillUpdate(nextProps, nextState) {}\n\n    componentDidUpdate(prevProps, prevState) {\n        console.log(prevState);\n        if (this.state.isOpened && !prevState.isOpened && typeof this.state.didOpened == \"function\") {\n            this.state.didOpened();\n        }\n        this._relayout();\n    }\n\n    _BodyComponent = (props) => {\n        var className = (props.extraPadding)\n            ? 'dialog-box-body dialog-box-body-padding'\n            : 'dialog-box-body';\n        var renderResult;\n\n        if (typeof(this.state.content) === 'string') {\n            let content = this\n                .state\n                .content\n                .split('\\n')\n                .map(function (item, i) {\n                    return (\n                        <span key={'dialog-item' + i}>{item}<br/></span>\n                    );\n                });\n\n            renderResult = (\n                <div className={className}>\n                    {content}\n                </div>\n            );\n\n        } else {\n            var Content = this.state.content;\n            renderResult = (\n                <div className={className}>\n                    <Content/>\n                </div>\n            );\n        }\n\n        return renderResult;\n    }\n\n    _HeaderComponent = () => {\n        var rendeResult = {};\n        if (this.state.title && this.state.title.length > 0) {\n            rendeResult = (\n                <header>{this.state.title}</header>\n            );\n\n        }\n        return rendeResult;\n    }\n\n    _FooterComponent = (props) => {\n        var classNames = ['dialog-button-block-primary'];\n\n        if (this.state.buttons.length == 2) {\n            classNames = ['dialog-button-inline', 'dialog-button-inline-primary']\n        }\n\n        var buttons = Object\n            .keys(this.state.buttons)\n            .map((key, i) => {\n                var item = this.state.buttons[i];\n                return (<DialogButton\n                    key={i}\n                    name={item.text}\n                    className={classNames[i]\n                    ? classNames[i]\n                    : \"\"}\n                    callback={item.callback}/>)\n            })\n\n        return (\n            <div className=\"dialog-box-footer\">{buttons}</div>\n        )\n    }\n\n    render() {\n\n        var dialogBoxClass = 'dialog-box';\n        var dataAttr = {\n            'data-dialog-name': this.state.dialogName\n        };\n        var hasExtraPaddingWithBody = false;\n\n        switch (this.state.type) {\n            default:\n            case 0:\n                return false;\n            case 1:\n            case 2:\n                break;\n            case 3:\n                hasExtraPaddingWithBody = true;\n                break;\n            case 4:\n                dialogBoxClass += ' dialog-list'\n                break;\n            case 5:\n                dialogBoxClass += ' dialog-scene'\n                break;\n        }\n\n        return (\n            <div className=\"dialog\" {...dataAttr}>\n                <div className=\"dialog-backdrop\"></div>\n                <div className={dialogBoxClass}>\n                    <div className=\"dialog-container\">\n                        <this._HeaderComponent ref={header => this.dialogHeader = header}/>\n                        <this._BodyComponent\n                            ref={body => this.dialogBody = body}\n                            extraPadding={hasExtraPaddingWithBody}/>\n                        <this._FooterComponent ref={footer => this.dialogFooter = footer}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nvar MixiedDialog = DialogRelayoutMixin(Dialog);\nexport {MixiedDialog as default, DialogStore, DialogActions};\n","import React, {Component} from 'react'\nimport {DialogActions} from \"./Dialog\"\n\nclass DialogButton extends Component {\n    constructor(props) {\n        super(props);\n    }\n    _onClick = () => {\n\n        var isOverride = false;\n\n        if (this.props.callback && typeof this.props.callback  == \"function\") {\n            isOverride = this.props.callback();\n        }\n\n        if (!isOverride && DialogActions) {\n            DialogActions.hideDialog();\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className} onClick={this._onClick}>{this.props.name}</div>\n        );\n    }\n}\n\nexport default DialogButton;","import React from 'react'\nimport {DialogActions} from \"./Dialog\"\nimport $ from \"jquery\";\n\nclass DialogDemo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"appData\"\n        }\n        this.subView = {};\n    }\n\n    _openCallback = () => {\n        console.log(\"_openCallback\");\n        $(this.subView).find('input').focus();\n    }\n    \n    _submitCallback = () => {\n        console.log(\"submit\");\n        alert($(this.subView).find('input').val());\n        return true;\n    }\n\n    _subView = () => {\n        return (\n            <div ref={(subView)=> { this.subView = subView}}>\n                <p className='title'>Sub view of DialogDemo APP</p>\n                <input type=\"text\"/>\n                <button className='btn' onClick={this._submitCallback}>送出鈕</button>\n            </div>\n        )\n    }\n\n    _openDialog = () => {\n        DialogActions.showDialog({\n            title: \"Dialog標題\",\n            content: this._subView,\n            didOpened: this._openCallback,\n            buttons:  [\n                {\n                    text: \"取消\",\n                    callback: DialogActions.hideDialog\n                },\n                {\n                    text: \"送出鈕\",\n                    callback: this._submitCallback\n                }\n            ]\n        });\n    }\n\n    render() {\n        return (\n            <div className='dialogDemo'>\n                <button className='btn' onClick={this._openDialog}>打開dialog</button>\n            </div >\n        )\n    }\n}\nexport default DialogDemo","import React from 'react';\nimport Dialog from './components/dialog/Dialog';\nimport ReactDOM from 'react-dom';\nimport DialogDemo from './components/dialog/DialogDemo';\n\nReactDOM.render(\n    <DialogDemo/>, document.getElementById('main'))\nReactDOM.render(\n    <Dialog/>, document.getElementById('dialog'))"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}