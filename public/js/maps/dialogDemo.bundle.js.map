{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/components/core/Mixin.DialogRelayout.jsx","src/components/dialog/Dialog.jsx","src/components/dialog/DialogButton.jsx","src/components/dialog/DialogDemo.jsx","src/dialogDemo.js"],"names":[],"mappings":"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","file":"../../mockExamples/dialogDemo.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import $ from \"jquery\"\nimport React from 'react'\n\nfunction DialogRelayout(WrappedComponent, configs) {\n\n    configs = Object.assign({\n        root: '#GlobalContainer', //for body > div\n        modifierRootClass: 'dialog-opened', //modifier root\n        container: '.container', //for prevent page scroll\n        containerBody: '.container-body' //for positioning main content container\n    }, configs);\n\n    class MixiedComponentWithRelayout extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        _relayout() {\n            console.log(\"_relayout\");\n            var root = $(configs.root),\n                container = $(configs.container),\n                containerBody = $(configs.containerBody),\n                posY = $(document).scrollTop();\n\n            if ((this.state.isOpened && root.hasClass(configs.toggleClass)) || (!this.state.isOpened && !root.hasClass(configs.toggleClass))) \n                return;\n\n            if (this.state.isOpened) {\n                //modifier root\n                root.toggleClass(configs.modifierRootClass);\n                //prevent page scroll for mobile\n                container.css({position: 'absolute'});\n                //positioning container of main content in dialog background\n                containerBody.css({\n                    position: 'fixed',\n                    top: -(posY)\n                });\n            } else {\n                //reset all\n                root.removeClass(configs.modifierRootClass);\n                container.removeAttr('style');\n                containerBody.removeAttr('style');\n                $(document).scrollTop(posY);\n            }\n\n        }\n\n        proc() {\n            console.log('proc');\n        }\n\n        componentDidMount() {\n            console.log('relayout componentDidMount');\n        }\n\n        componentWillUnmount() {\n            console.log('relayout componentWillUnmount');\n        }\n\n        componentWillMount() {\n            console.log('relayout componentWillMount');\n        }\n\n\n        render() {\n            var props = Object.assign({}, this.props, {\n                ref: () => {\n                    this.proc.bind(this)\n                },\n                _relayout: this._relayout\n            })\n\n            return <WrappedComponent {...props}/>\n        }\n    }\n\n    return MixiedComponentWithRelayout;\n}\nexport default DialogRelayout;","import Reflux from \"reflux\"\nimport React from 'react'\nimport $ from \"jquery\"\nimport DialogButton from \"./DialogButton\"\nimport DialogRelayoutMixin from \"../core/Mixin.DialogRelayout\"\n\nvar DialogActions = Reflux.createActions([\n    \"showDialog\",\n    \"showDialogYesNo\",\n    \"showDialogList\",\n    \"showDialogListYesNo\",\n    \"showDialogScene\",\n    \"showDialogToast\",\n    \"hideDialog\",\n    \"setDialogName\",\n    \"clearDialogName\"\n]);\n\nclass DialogStore extends Reflux.Store {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpened: false,\n            posY: 0,\n            type: 0,\n            title: '',\n            content: '',\n            buttons: [],\n            callbackFn: []\n        };\n        this.listenables = DialogActions;\n    }\n\n    _updateState() {\n        if (!this.state.isOpened && this.state.type != 0) {\n            this.state.posY = $(document).scrollTop();\n        }\n\n        this.state.isOpened = (this.state.type != 0);\n        this.trigger(this.state);\n    }\n\n    onShowDialog(title, content, button, confirmFn) {\n        this.state.type = 1;\n        this.state.title = title;\n        this.state.content = content;\n        this.state.buttons = [button];\n        this.state.callbackFn = [confirmFn];\n        this._updateState();\n    }\n\n}\n\nclass Dialog extends Reflux.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {}; // our store will add its own state to the component's\n        this.store = DialogStore; // <- just assign the store class itself\n        this._BodyComponent = this\n            ._BodyComponent\n            .bind(this);\n        this._relayout = this\n            .props\n            ._relayout\n            .bind(this);\n    }\n\n    componentWillUpdate(nextProps, nextState) {}\n\n    componentDidUpdate() {\n        this._relayout();\n    }\n\n    _BodyComponent = (props) => {\n        var className = (props.extraPadding)\n            ? 'dialog-box-body dialog-box-body-padding'\n            : 'dialog-box-body';\n        var renderResult;\n\n        if (typeof(this.state.content) === 'string') {\n            let content = this\n                .state\n                .content\n                .split('\\n')\n                .map(function (item, i) {\n                    return (\n                        <span key={'dialog-item' + i}>{item}<br/></span>\n                    );\n                });\n\n            renderResult = (\n                <div className={className}>\n                    {content}\n                </div>\n            );\n\n        } else {\n            var Content = this.state.content;\n            renderResult = (\n                <div className={className}>\n                    <Content/>\n                </div>\n            );\n        }\n\n        return renderResult;\n    }\n\n    _HeaderComponent = () => {\n\n    }\n    \n    _FooterComponent = () => {\n\n    }\n\n    render() {\n\n        var dialogBoxClass = 'dialog-box';\n        var dataAttr = {\n            'data-dialog-name': this.state.dialogName\n        };\n        var hasExtraPaddingWithBody = false;\n\n        switch (this.state.type) {\n            default:\n            case 0:\n                return false;\n            case 1:\n            case 2:\n                break;\n            case 3:\n                hasExtraPaddingWithBody = true;\n                break;\n            case 4:\n                dialogBoxClass += ' dialog-list'\n                break;\n            case 5:\n                dialogBoxClass += ' dialog-scene'\n                break;\n        }\n\n        return (\n            <div className=\"dialog\" {...dataAttr}>\n                <this._BodyComponent\n                    ref={body => this.dialogBody = body}\n                    extraPadding={hasExtraPaddingWithBody}/>\n            </div>\n        )\n    }\n\n}\n\nvar MixiedDialog = DialogRelayoutMixin(Dialog);\nexport {MixiedDialog as default, DialogStore, DialogActions};\n","import React, {Component} from 'react'\nimport { DialogActions } from \"./Dialog\"\n\n\nclass DialogButton extends Component {\n    \n    _onClick () {\n\n        var isOverride = false;\n\n        if (this.props.callback) {\n            isOverride = this.props.callback();\n        }\n        \n        if (!isOverride && DialogActions) {\n            DialogActions.hideDialog();\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.props.className} onClick={this._onClick }>{this.props.name}</div>\n        );\n    }\n}\n\nexport default DialogButton;","import React from 'react'\nimport {DialogActions} from \"./Dialog\"\nimport $ from \"jquery\";\n\nclass DialogDemo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: \"appData\"\n        }\n        // this.subView = this.subView.bind(this);\n        this._openDialogA = this._openDialogA.bind(this);\n        this._openDialogB = this._openDialogB.bind(this);\n        this.submitCallback = this.submitCallback.bind(this);\n        this.viewA = {};\n        this.viewB = {};\n    }\n    submitCallback() {\n        alert(\"lalalalal\");\n        console.log(this.viewA);\n        // console.log(this.viewB);\n        $(this.viewA).fadeOut();\n    }\n    _subViewA = () => {\n        return (\n            <div ref={(subView)=> { this.viewA = subView}}>\n                <p className='title'>sub view A</p>\n                <input type=\"text\"/>\n                <button className='btn' onClick={this.submitCallback}>送出鈕</button>\n            </div>\n        )\n    }\n    _subViewB = () => {\n        return (\n            <div ref={(subView)=> {this.viewB = subView}}>\n                <p className='title'>sub view B</p>\n                <input type=\"text\"/>\n                <button className='btn' onClick={this.submitCallback}>送出鈕</button>\n            </div>\n        )\n    }\n    _openDialogA() {\n        DialogActions.showDialog(\"Dialog標題\", this._subViewA, \"button\", \"confirmFn\");\n    }\n\n    _openDialogB() {\n        DialogActions.showDialog(\"Dialog標題\", this._subViewB, \"button\", \"confirmFn\");\n    }\n\n    render() {\n        return (\n            <div className='dialogDemo'>\n                <button className='btn' onClick={this._openDialogA}>打開dialogA</button>\n                <button className='btn' onClick={this._openDialogB}>打開dialogB</button>\n            </div >\n        )\n    }\n}\nexport default DialogDemo","import React from 'react';\nimport Dialog from './components/dialog/Dialog';\nimport ReactDOM from 'react-dom';\nimport DialogDemo from './components/dialog/DialogDemo';\n\nReactDOM.render(\n    <DialogDemo/>, document.getElementById('main'))\nReactDOM.render(\n    <Dialog/>, document.getElementById('dialog'))"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY29tcG9uZW50cy9jb3JlL01peGluLkRpYWxvZ1JlbGF5b3V0LmpzeCIsInNyYy9jb21wb25lbnRzL2RpYWxvZy9EaWFsb2cuanN4Iiwic3JjL2NvbXBvbmVudHMvZGlhbG9nL0RpYWxvZ0J1dHRvbi5qc3giLCJzcmMvY29tcG9uZW50cy9kaWFsb2cvRGlhbG9nRGVtby5qc3giLCJzcmMvZGlhbG9nRGVtby5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7O0FDQUE7Ozs7QUFDQTs7Ozs7Ozs7Ozs7O0FBRUEsU0FBUyxjQUFULENBQXdCLGdCQUF4QixFQUEwQyxPQUExQyxFQUFtRDs7QUFFL0MsY0FBVSxPQUFPLE1BQVAsQ0FBYztBQUNwQixjQUFNLGtCQURjLEVBQ007QUFDMUIsMkJBQW1CLGVBRkMsRUFFZ0I7QUFDcEMsbUJBQVcsWUFIUyxFQUdLO0FBQ3pCLHVCQUFlLGlCQUpLLENBSWE7QUFKYixLQUFkLEVBS1AsT0FMTyxDQUFWOztBQUYrQyxRQVN6QywyQkFUeUM7QUFBQTs7QUFVM0MsNkNBQVksS0FBWixFQUFtQjtBQUFBOztBQUFBLDZKQUNULEtBRFM7QUFFbEI7O0FBWjBDO0FBQUE7QUFBQSx3Q0FjL0I7QUFDUix3QkFBUSxHQUFSLENBQVksV0FBWjtBQUNBLG9CQUFJLE9BQU8sc0JBQUUsUUFBUSxJQUFWLENBQVg7QUFBQSxvQkFDSSxZQUFZLHNCQUFFLFFBQVEsU0FBVixDQURoQjtBQUFBLG9CQUVJLGdCQUFnQixzQkFBRSxRQUFRLGFBQVYsQ0FGcEI7QUFBQSxvQkFHSSxPQUFPLHNCQUFFLFFBQUYsRUFBWSxTQUFaLEVBSFg7O0FBS0Esb0JBQUssS0FBSyxLQUFMLENBQVcsUUFBWCxJQUF1QixLQUFLLFFBQUwsQ0FBYyxRQUFRLFdBQXRCLENBQXhCLElBQWdFLENBQUMsS0FBSyxLQUFMLENBQVcsUUFBWixJQUF3QixDQUFDLEtBQUssUUFB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QUFsQixPQUFwQjtBQUNBLGNBQUssWUFBTCxHQUFvQixNQUFLLFlBQUwsQ0FBa0IsSUFBbEIsT0FBcEI7QUFDQSxjQUFLLGNBQUwsR0FBc0IsTUFBSyxjQUFMLENBQW9CLElBQXBCLE9BQXRCO0FBQ0EsY0FBSyxLQUFMLEdBQWEsRUFBYjtBQUNBLGNBQUssS0FBTCxHQUFhLEVBQWI7QUFWZTtBQVdsQjs7Ozt5Q0FDZ0I7QUFDYixrQkFBTSxXQUFOO0FBQ0Esb0JBQVEsR0FBUixDQUFZLEtBQUssS0FBakI7QUFDQTtBQUNBLGtDQUFFLEtBQUssS0FBUCxFQUFjLE9BQWQ7QUFDSDs7O3VDQW1CYztBQUNYLGtDQUFjLFVBQWQsQ0FBeUIsVUFBekIsRUFBcUMsS0FBSyxTQUExQyxFQUFxRCxRQUFyRCxFQUErRCxXQUEvRDtBQUNIOzs7dUNBRWM7QUFDWCxrQ0FBYyxVQUFkLENBQXlCLFVBQXpCLEVBQXFDLEtBQUssU0FBMUMsRUFBcUQsUUFBckQsRUFBK0QsV0FBL0Q7QUFDSDs7O2lDQUVRO0FBQ0wsbUJBQ0k7QUFBQTtBQUFBLGtCQUFLLFdBQVUsWUFBZjtBQUNJO0FBQUE7QUFBQSxzQkFBUSxXQUFVLEtBQWxCLEVBQXdCLFNBQVMsS0FBSyxZQUF0QztBQUFBO0FBQUEsaUJBREo7QUFFSTtBQUFBO0FBQUEsc0JBQVEsV0FBVSxLQUFsQixFQUF3QixTQUFTLEtBQUssWUFBdEM7QUFBQTtBQUFBO0FBRkosYUFESjtBQU1IOzs7O0VBcERvQixnQkFBTSxTOztrQkFzRGhCLFU7Ozs7O0FDMURmOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxtQkFBUyxNQUFULENBQ0kseURBREosRUFDbUIsU0FBUyxjQUFULENBQXdCLE1BQXhCLENBRG5CO0FBRUEsbUJBQVMsTUFBVCxDQUNJLHFEQURKLEVBQ2UsU0FBUyxjQUFULENBQXdCLFFBQXhCLENBRGYiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5cbmZ1bmN0aW9uIERpYWxvZ1JlbGF5b3V0KFdyYXBwZWRDb21wb25lbnQsIGNvbmZpZ3MpIHtcblxuICAgIGNvbmZpZ3MgPSBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgcm9vdDogJyNHbG9iYWxDb250YWluZXInLCAvL2ZvciBib2R5ID4gZGl2XG4gICAgICAgIG1vZGlmaWVyUm9vdENsYXNzOiAnZGlhbG9nLW9wZW5lZCcsIC8vbW9kaWZpZXIgcm9vdFxuICAgICAgICBjb250YWluZXI6ICcuY29udGFpbmVyJywgLy9mb3IgcHJldmVudCBwYWdlIHNjcm9sbFxuICAgICAgICBjb250YWluZXJCb2R5OiAnLmNvbnRhaW5lci1ib2R5JyAvL2ZvciBwb3NpdGlvbmluZyBtYWluIGNvbnRlbnQgY29udGFpbmVyXG4gICAgfSwgY29uZmlncyk7XG5cbiAgICBjbGFzcyBNaXhpZWRDb21wb25lbnRXaXRoUmVsYXlvdXQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICAgICAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB9XG5cbiAgICAgICAgX3JlbGF5b3V0KCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJfcmVsYXlvdXRcIik7XG4gICAgICAgICAgICB2YXIgcm9vdCA9ICQoY29uZmlncy5yb290KSxcbiAgICAgICAgICAgICAgICBjb250YWluZXIgPSAkKGNvbmZpZ3MuY29udGFpbmVyKSxcbiAgICAgICAgICAgICAgICBjb250YWluZXJCb2R5ID0gJChjb25maWdzLmNvbnRhaW5lckJvZHkpLFxuICAgICAgICAgICAgICAgIHBvc1kgPSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKTtcblxuICAgICAgICAgICAgaWYgKCh0aGlzLnN0YXRlLmlzT3BlbmVkICYmIHJvb3QuaGFzQ2xhc3MoY29uZmlncy50b2dnbGVDbGFzcykpIHx8ICghdGhpcy5zdGF0ZS5pc09wZW5lZCAmJiAhcm9vdC5oYXNDbGFzcyhjb25maWdzLnRvZ2dsZUNsYXNzKSkpIFxuICAgICAgICAgICAgICAgIHJldHVybjtcblxuICAgICAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNPcGVuZWQpIHtcbiAgICAgICAgICAgICAgICAvL21vZGlmaWVyIHJvb3RcbiAgICAgICAgICAgICAgICByb290LnRvZ2dsZUNsYXNzKGNvbmZpZ3MubW9kaWZpZXJSb290Q2xhc3MpO1xuICAgICAgICAgICAgICAgIC8vcHJldmVudCBwYWdlIHNjcm9sbCBmb3IgbW9iaWxlXG4gICAgICAgICAgICAgICAgY29udGFpbmVyLmNzcyh7cG9zaXRpb246ICdhYnNvbHV0ZSd9KTtcbiAgICAgICAgICAgICAgICAvL3Bvc2l0aW9uaW5nIGNvbnRhaW5lciBvZiBtYWluIGNvbnRlbnQgaW4gZGlhbG9nIGJhY2tncm91bmRcbiAgICAgICAgICAgICAgICBjb250YWluZXJCb2R5LmNzcyh7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgICAgICAgICB0b3A6IC0ocG9zWSlcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9yZXNldCBhbGxcbiAgICAgICAgICAgICAgICByb290LnJlbW92ZUNsYXNzKGNvbmZpZ3MubW9kaWZpZXJSb290Q2xhc3MpO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lci5yZW1vdmVBdHRyKCdzdHlsZScpO1xuICAgICAgICAgICAgICAgIGNvbnRhaW5lckJvZHkucmVtb3ZlQXR0cignc3R5bGUnKTtcbiAgICAgICAgICAgICAgICAkKGRvY3VtZW50KS5zY3JvbGxUb3AocG9zWSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgICAgIHByb2MoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygncHJvYycpO1xuICAgICAgICB9XG5cbiAgICAgICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVsYXlvdXQgY29tcG9uZW50RGlkTW91bnQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3JlbGF5b3V0IGNvbXBvbmVudFdpbGxVbm1vdW50Jyk7XG4gICAgICAgIH1cblxuICAgICAgICBjb21wb25lbnRXaWxsTW91bnQoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygncmVsYXlvdXQgY29tcG9uZW50V2lsbE1vdW50Jyk7XG4gICAgICAgIH1cblxuXG4gICAgICAgIHJlbmRlcigpIHtcbiAgICAgICAgICAgIHZhciBwcm9wcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucHJvcHMsIHtcbiAgICAgICAgICAgICAgICByZWY6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wcm9jLmJpbmQodGhpcylcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF9yZWxheW91dDogdGhpcy5fcmVsYXlvdXRcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIHJldHVybiA8V3JhcHBlZENvbXBvbmVudCB7Li4ucHJvcHN9Lz5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBNaXhpZWRDb21wb25lbnRXaXRoUmVsYXlvdXQ7XG59XG5leHBvcnQgZGVmYXVsdCBEaWFsb2dSZWxheW91dDsiLCJpbXBvcnQgUmVmbHV4IGZyb20gXCJyZWZsdXhcIlxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0ICQgZnJvbSBcImpxdWVyeVwiXG5pbXBvcnQgRGlhbG9nQnV0dG9uIGZyb20gXCIuL0RpYWxvZ0J1dHRvblwiXG5pbXBvcnQgRGlhbG9nUmVsYXlvdXRNaXhpbiBmcm9tIFwiLi4vY29yZS9NaXhpbi5EaWFsb2dSZWxheW91dFwiXG5cbnZhciBEaWFsb2dBY3Rpb25zID0gUmVmbHV4LmNyZWF0ZUFjdGlvbnMoW1xuICAgIFwic2hvd0RpYWxvZ1wiLFxuICAgIFwic2hvd0RpYWxvZ1llc05vXCIsXG4gICAgXCJzaG93RGlhbG9nTGlzdFwiLFxuICAgIFwic2hvd0RpYWxvZ0xpc3RZZXNOb1wiLFxuICAgIFwic2hvd0RpYWxvZ1NjZW5lXCIsXG4gICAgXCJzaG93RGlhbG9nVG9hc3RcIixcbiAgICBcImhpZGVEaWFsb2dcIixcbiAgICBcInNldERpYWxvZ05hbWVcIixcbiAgICBcImNsZWFyRGlhbG9nTmFtZVwiXG5dKTtcblxuY2xhc3MgRGlhbG9nU3RvcmUgZXh0ZW5kcyBSZWZsdXguU3RvcmUge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzT3BlbmVkOiBmYWxzZSxcbiAgICAgICAgICAgIHBvc1k6IDAsXG4gICAgICAgICAgICB0eXBlOiAwLFxuICAgICAgICAgICAgdGl0bGU6ICcnLFxuICAgICAgICAgICAgY29udGVudDogJycsXG4gICAgICAgICAgICBidXR0b25zOiBbXSxcbiAgICAgICAgICAgIGNhbGxiYWNrRm46IFtdXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubGlzdGVuYWJsZXMgPSBEaWFsb2dBY3Rpb25zO1xuICAgIH1cblxuICAgIF91cGRhdGVTdGF0ZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnN0YXRlLmlzT3BlbmVkICYmIHRoaXMuc3RhdGUudHlwZSAhPSAwKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXRlLnBvc1kgPSAkKGRvY3VtZW50KS5zY3JvbGxUb3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuc3RhdGUuaXNPcGVuZWQgPSAodGhpcy5zdGF0ZS50eXBlICE9IDApO1xuICAgICAgICB0aGlzLnRyaWdnZXIodGhpcy5zdGF0ZSk7XG4gICAgfVxuXG4gICAgb25TaG93RGlhbG9nKHRpdGxlLCBjb250ZW50LCBidXR0b24sIGNvbmZpcm1Gbikge1xuICAgICAgICB0aGlzLnN0YXRlLnR5cGUgPSAxO1xuICAgICAgICB0aGlzLnN0YXRlLnRpdGxlID0gdGl0bGU7XG4gICAgICAgIHRoaXMuc3RhdGUuY29udGVudCA9IGNvbnRlbnQ7XG4gICAgICAgIHRoaXMuc3RhdGUuYnV0dG9ucyA9IFtidXR0b25dO1xuICAgICAgICB0aGlzLnN0YXRlLmNhbGxiYWNrRm4gPSBbY29uZmlybUZuXTtcbiAgICAgICAgdGhpcy5fdXBkYXRlU3RhdGUoKTtcbiAgICB9XG5cbn1cblxuY2xhc3MgRGlhbG9nIGV4dGVuZHMgUmVmbHV4LlB1cmVDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHt9OyAvLyBvdXIgc3RvcmUgd2lsbCBhZGQgaXRzIG93biBzdGF0ZSB0byB0aGUgY29tcG9uZW50J3NcbiAgICAgICAgdGhpcy5zdG9yZSA9IERpYWxvZ1N0b3JlOyAvLyA8LSBqdXN0IGFzc2lnbiB0aGUgc3RvcmUgY2xhc3MgaXRzZWxmXG4gICAgICAgIHRoaXMuX0JvZHlDb21wb25lbnQgPSB0aGlzXG4gICAgICAgICAgICAuX0JvZHlDb21wb25lbnRcbiAgICAgICAgICAgIC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9yZWxheW91dCA9IHRoaXNcbiAgICAgICAgICAgIC5wcm9wc1xuICAgICAgICAgICAgLl9yZWxheW91dFxuICAgICAgICAgICAgLmJpbmQodGhpcyk7XG4gICAgfVxuXG4gICAgY29tcG9uZW50V2lsbFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge31cblxuICAgIGNvbXBvbmVudERpZFVwZGF0ZSgpIHtcbiAgICAgICAgdGhpcy5fcmVsYXlvdXQoKTtcbiAgICB9XG5cbiAgICBfQm9keUNvbXBvbmVudCA9IChwcm9wcykgPT4ge1xuICAgICAgICB2YXIgY2xhc3NOYW1lID0gKHByb3BzLmV4dHJhUGFkZGluZylcbiAgICAgICAgICAgID8gJ2RpYWxvZy1ib3gtYm9keSBkaWFsb2ctYm94LWJvZHktcGFkZGluZydcbiAgICAgICAgICAgIDogJ2RpYWxvZy1ib3gtYm9keSc7XG4gICAgICAgIHZhciByZW5kZXJSZXN1bHQ7XG5cbiAgICAgICAgaWYgKHR5cGVvZih0aGlzLnN0YXRlLmNvbnRlbnQpID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgbGV0IGNvbnRlbnQgPSB0aGlzXG4gICAgICAgICAgICAgICAgLnN0YXRlXG4gICAgICAgICAgICAgICAgLmNvbnRlbnRcbiAgICAgICAgICAgICAgICAuc3BsaXQoJ1xcbicpXG4gICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoaXRlbSwgaSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4ga2V5PXsnZGlhbG9nLWl0ZW0nICsgaX0+e2l0ZW19PGJyLz48L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIHJlbmRlclJlc3VsdCA9IChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgICAgICAgICAge2NvbnRlbnR9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgQ29udGVudCA9IHRoaXMuc3RhdGUuY29udGVudDtcbiAgICAgICAgICAgIHJlbmRlclJlc3VsdCA9IChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgICAgICAgICAgICAgICAgPENvbnRlbnQvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiByZW5kZXJSZXN1bHQ7XG4gICAgfVxuXG4gICAgX0hlYWRlckNvbXBvbmVudCA9ICgpID0+IHtcblxuICAgIH1cbiAgICBcbiAgICBfRm9vdGVyQ29tcG9uZW50ID0gKCkgPT4ge1xuXG4gICAgfVxuXG4gICAgcmVuZGVyKCkge1xuXG4gICAgICAgIHZhciBkaWFsb2dCb3hDbGFzcyA9ICdkaWFsb2ctYm94JztcbiAgICAgICAgdmFyIGRhdGFBdHRyID0ge1xuICAgICAgICAgICAgJ2RhdGEtZGlhbG9nLW5hbWUnOiB0aGlzLnN0YXRlLmRpYWxvZ05hbWVcbiAgICAgICAgfTtcbiAgICAgICAgdmFyIGhhc0V4dHJhUGFkZGluZ1dpdGhCb2R5ID0gZmFsc2U7XG5cbiAgICAgICAgc3dpdGNoICh0aGlzLnN0YXRlLnR5cGUpIHtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIGhhc0V4dHJhUGFkZGluZ1dpdGhCb2R5ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICBkaWFsb2dCb3hDbGFzcyArPSAnIGRpYWxvZy1saXN0J1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIGRpYWxvZ0JveENsYXNzICs9ICcgZGlhbG9nLXNjZW5lJ1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZGlhbG9nXCIgey4uLmRhdGFBdHRyfT5cbiAgICAgICAgICAgICAgICA8dGhpcy5fQm9keUNvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICByZWY9e2JvZHkgPT4gdGhpcy5kaWFsb2dCb2R5ID0gYm9keX1cbiAgICAgICAgICAgICAgICAgICAgZXh0cmFQYWRkaW5nPXtoYXNFeHRyYVBhZGRpbmdXaXRoQm9keX0vPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG5cbn1cblxudmFyIE1peGllZERpYWxvZyA9IERpYWxvZ1JlbGF5b3V0TWl4aW4oRGlhbG9nKTtcbmV4cG9ydCB7TWl4aWVkRGlhbG9nIGFzIGRlZmF1bHQsIERpYWxvZ1N0b3JlLCBEaWFsb2dBY3Rpb25zfTtcbiIsImltcG9ydCBSZWFjdCwge0NvbXBvbmVudH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBEaWFsb2dBY3Rpb25zIH0gZnJvbSBcIi4vRGlhbG9nXCJcblxuXG5jbGFzcyBEaWFsb2dCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIFxuICAgIF9vbkNsaWNrICgpIHtcblxuICAgICAgICB2YXIgaXNPdmVycmlkZSA9IGZhbHNlO1xuXG4gICAgICAgIGlmICh0aGlzLnByb3BzLmNhbGxiYWNrKSB7XG4gICAgICAgICAgICBpc092ZXJyaWRlID0gdGhpcy5wcm9wcy5jYWxsYmFjaygpO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBpZiAoIWlzT3ZlcnJpZGUgJiYgRGlhbG9nQWN0aW9ucykge1xuICAgICAgICAgICAgRGlhbG9nQWN0aW9ucy5oaWRlRGlhbG9nKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17dGhpcy5wcm9wcy5jbGFzc05hbWV9IG9uQ2xpY2s9e3RoaXMuX29uQ2xpY2sgfT57dGhpcy5wcm9wcy5uYW1lfTwvZGl2PlxuICAgICAgICApO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGlhbG9nQnV0dG9uOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7RGlhbG9nQWN0aW9uc30gZnJvbSBcIi4vRGlhbG9nXCJcbmltcG9ydCAkIGZyb20gXCJqcXVlcnlcIjtcblxuY2xhc3MgRGlhbG9nRGVtbyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgZGF0YTogXCJhcHBEYXRhXCJcbiAgICAgICAgfVxuICAgICAgICAvLyB0aGlzLnN1YlZpZXcgPSB0aGlzLnN1YlZpZXcuYmluZCh0aGlzKTtcbiAgICAgICAgdGhpcy5fb3BlbkRpYWxvZ0EgPSB0aGlzLl9vcGVuRGlhbG9nQS5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLl9vcGVuRGlhbG9nQiA9IHRoaXMuX29wZW5EaWFsb2dCLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuc3VibWl0Q2FsbGJhY2sgPSB0aGlzLnN1Ym1pdENhbGxiYWNrLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMudmlld0EgPSB7fTtcbiAgICAgICAgdGhpcy52aWV3QiA9IHt9O1xuICAgIH1cbiAgICBzdWJtaXRDYWxsYmFjaygpIHtcbiAgICAgICAgYWxlcnQoXCJsYWxhbGFsYWxcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMudmlld0EpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnZpZXdCKTtcbiAgICAgICAgJCh0aGlzLnZpZXdBKS5mYWRlT3V0KCk7XG4gICAgfVxuICAgIF9zdWJWaWV3QSA9ICgpID0+IHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgcmVmPXsoc3ViVmlldyk9PiB7IHRoaXMudmlld0EgPSBzdWJWaWV3fX0+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSd0aXRsZSc+c3ViIHZpZXcgQTwvcD5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIi8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J2J0bicgb25DbGljaz17dGhpcy5zdWJtaXRDYWxsYmFja30+6YCB5Ye66YiVPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbiAgICBfc3ViVmlld0IgPSAoKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2IHJlZj17KHN1YlZpZXcpPT4ge3RoaXMudmlld0IgPSBzdWJWaWV3fX0+XG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPSd0aXRsZSc+c3ViIHZpZXcgQjwvcD5cbiAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIi8+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J2J0bicgb25DbGljaz17dGhpcy5zdWJtaXRDYWxsYmFja30+6YCB5Ye66YiVPC9idXR0b24+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKVxuICAgIH1cbiAgICBfb3BlbkRpYWxvZ0EoKSB7XG4gICAgICAgIERpYWxvZ0FjdGlvbnMuc2hvd0RpYWxvZyhcIkRpYWxvZ+aomemhjFwiLCB0aGlzLl9zdWJWaWV3QSwgXCJidXR0b25cIiwgXCJjb25maXJtRm5cIik7XG4gICAgfVxuXG4gICAgX29wZW5EaWFsb2dCKCkge1xuICAgICAgICBEaWFsb2dBY3Rpb25zLnNob3dEaWFsb2coXCJEaWFsb2fmqJnpoYxcIiwgdGhpcy5fc3ViVmlld0IsIFwiYnV0dG9uXCIsIFwiY29uZmlybUZuXCIpO1xuICAgIH1cblxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkaWFsb2dEZW1vJz5cbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzTmFtZT0nYnRuJyBvbkNsaWNrPXt0aGlzLl9vcGVuRGlhbG9nQX0+5omT6ZaLZGlhbG9nQTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPSdidG4nIG9uQ2xpY2s9e3RoaXMuX29wZW5EaWFsb2dCfT7miZPplotkaWFsb2dCPC9idXR0b24+XG4gICAgICAgICAgICA8L2RpdiA+XG4gICAgICAgIClcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBEaWFsb2dEZW1vIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBEaWFsb2cgZnJvbSAnLi9jb21wb25lbnRzL2RpYWxvZy9EaWFsb2cnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgRGlhbG9nRGVtbyBmcm9tICcuL2NvbXBvbmVudHMvZGlhbG9nL0RpYWxvZ0RlbW8nO1xuXG5SZWFjdERPTS5yZW5kZXIoXG4gICAgPERpYWxvZ0RlbW8vPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21haW4nKSlcblJlYWN0RE9NLnJlbmRlcihcbiAgICA8RGlhbG9nLz4sIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkaWFsb2cnKSkiXX0="}