{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/components/index/MockComponent.jsx","src/components/index/RootComponent.jsx","src/index.js"],"names":[],"mappings":"AAAA;;;;;;;ACCC;;;;;;AAED,IAAI,gBAAgB,gBAAM,WAAN,CAAkB;AAAA;;AACrC,kBAAiB,2BAAU;AACvB,SAAO;AACN,aAAU;AADJ,GAAP;AAGA,EALiC;AAMlC,qBAAoB,8BAAU;AAC7B,MAAI,QAAQ,IAAZ;AACH,OAAK,KAAL,CAAW;AACP,YAAS;AADF,GAAX;;AAIA,OAAK,IAAL,CAAU,QAAV,EAAoB;AAChB,gBAAa,CAAC;AACV,aAAS,CADC;AAEV,aAAS;AAFC,IAAD;AADG,GAApB;;AAOA,IAAE,IAAF,CAAO;AACH,QAAK,YADF;AAEH,aAAU;AAFP,GAAP,EAGG,IAHH,CAGQ,UAAS,IAAT,EAAe,MAAf,EAAuB,KAAvB,EAA6B;AACjC,SAAM,QAAN,CAAe,EAAC,UAAU,IAAX,EAAf;AACH,GALD;AAMG,EAzBiC;AA0BrC,SAAQ,kBAAU;AACjB;AACA,MAAI,QAAQ,IAAZ;AACA,MAAI,oBAAqB,gBAAM,QAAN,CAAe,GAAf,CAAmB,KAAK,KAAL,CAAW,QAA9B,EAAwC,UAAS,KAAT,EAAe;AAC/E,UAAO,gBAAM,YAAN,CAAmB,KAAnB,EAA0B;AAChC,cAAU,MAAM,KAAN,CAAY;;AADU,IAA1B,CAAP;AAIA,GALwB,CAAzB;;AAQA,SAAO;AAAA;AAAA;AAAO;AAAP,GAAP;AACA;AAtCoC,CAAlB,CAApB;;kBAyCe,a;;;;;;;;;AC5Cd;;;;;;AAED,IAAI,cAAc,gBAAM,WAAN,CAAkB;AAAA;;AACnC,YAAW;AACV,YAAU,gBAAM,SAAN,CAAgB;AADhB,EADwB;AAInC,SAAQ,kBAAU;AACjB,MAAI,QAAQ,IAAZ;AACA,MAAI,YAAY,EAAhB;;AAEA,MAAG,MAAM,KAAN,CAAY,QAAZ,IAAwB,MAAM,KAAN,CAAY,QAAZ,CAAqB,IAAhD,EAAsD;AACrD,eAAY,MAAM,KAAN,CAAY,QAAZ,CAAqB,IAArB,CAA0B,GAA1B,CAA8B,UAAS,IAAT,EAAc,CAAd,EAAgB;AACxD,WAAQ;AAAA;AAAA,OAAI,KAAK,CAAT;AACP;AAAA;AAAA;AAAO,WAAK;AAAZ,MADO;AAEP;AAAA;AAAA;AAAO,WAAK;AAAZ;AAFO,KAAR;AAID,IALW,CAAZ;AAMA;;AAED,SAAO;AAAA;AAAA;AAAK,YAAL;AAAA;AAAA,GAAP;AACA;AAlBkC,CAAlB,CAAlB;;kBAqBe,W;;;;;ACvBf;;;;AACA;;;;AACA;;;;;;AAGA,mBAAS,MAAT,CACC;AAAA;AAAA;AACC;AADD,CADD,EAIC,SAAS,cAAT,CAAwB,OAAxB,CAJD","file":"../../mockExamples/index.bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\n import React from 'react'\n\nvar MockComponent = React.createClass({\n\tgetInitialState: function(){\n    \treturn {\n    \t\tinitData: {}\n    \t};\n    },\n    componentWillMount: function(){\n    \tvar _this = this;\n\t\tMock.setup({\n\t\t    timeout: '200-600'\n\t\t});\n\n\t\tMock.mock(/\\.json/, {\n\t\t    'list|1-10': [{\n\t\t        'id|+1': 1,\n\t\t        'email': '@EMAIL'\n\t\t    }]\n\t\t});\n\n\t\t$.ajax({\n\t\t    url: 'hello.json',\n\t\t    dataType: 'json'\n\t\t}).done(function(data, status, jqXHR){\n\t\t    _this.setState({initData: data});\n\t\t});\n    },\n\trender: function(){\n\t\t//more than one child\n\t\tvar _this = this;\n\t\tvar childrenWithProps =  React.Children.map(this.props.children, function(child){\n\t\t\treturn React.cloneElement(child, {\n\t\t\t\tinitData: _this.state.initData\n\t\t\t\t\n\t\t\t});\n\t\t});\n\n\t\t\n\t\treturn <div>{ childrenWithProps }</div>\n\t}\n});\n\nexport default MockComponent;\n\n\n\n\n"," import React from 'react'\n\nvar MyComponent = React.createClass({\n\tpropTypes: {\n\t\tinitData: React.PropTypes.array\n\t},\n\trender: function(){\n\t\tvar _this = this;\n\t\tvar listItems = []\n\n\t\tif(_this.props.initData && _this.props.initData.list) {\n\t\t\tlistItems = _this.props.initData.list.map(function(item,i){\n\t\t\t  return (<li key={i}>\n\t\t\t  \t<span>{item.id}</span>\n\t\t\t  \t<span>{item.email}</span>\n\t\t\t  </li>)\t\n\t\t\t});\n\t\t}\n\t\t\n\t\treturn <ul>{listItems} lalaluo1</ul>\n\t}\n});\n\nexport default MyComponent;","import Index from './components/index/RootComponent';\nimport Mock from './components/index/MockComponent';\nimport ReactDOM from 'react-dom';\nimport React from 'react-dom';\n\nReactDOM.render(\n\t<Mock>\n\t\t<Index/>\n\t</Mock>,\n\tdocument.getElementById('index')\n)"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvY29tcG9uZW50cy9pbmRleC9Nb2NrQ29tcG9uZW50LmpzeCIsInNyYy9jb21wb25lbnRzL2luZGV4L1Jvb3RDb21wb25lbnQuanN4Iiwic3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FDQ0M7Ozs7OztBQUVELElBQUksZ0JBQWdCLGdCQUFNLFdBQU4sQ0FBa0I7QUFBQTs7QUFDckMsa0JBQWlCLDJCQUFVO0FBQ3ZCLFNBQU87QUFDTixhQUFVO0FBREosR0FBUDtBQUdBLEVBTGlDO0FBTWxDLHFCQUFvQiw4QkFBVTtBQUM3QixNQUFJLFFBQVEsSUFBWjtBQUNILE9BQUssS0FBTCxDQUFXO0FBQ1AsWUFBUztBQURGLEdBQVg7O0FBSUEsT0FBSyxJQUFMLENBQVUsUUFBVixFQUFvQjtBQUNoQixnQkFBYSxDQUFDO0FBQ1YsYUFBUyxDQURDO0FBRVYsYUFBUztBQUZDLElBQUQ7QUFERyxHQUFwQjs7QUFPQSxJQUFFLElBQUYsQ0FBTztBQUNILFFBQUssWUFERjtBQUVILGFBQVU7QUFGUCxHQUFQLEVBR0csSUFISCxDQUdRLFVBQVMsSUFBVCxFQUFlLE1BQWYsRUFBdUIsS0FBdkIsRUFBNkI7QUFDakMsU0FBTSxRQUFOLENBQWUsRUFBQyxVQUFVLElBQVgsRUFBZjtBQUNILEdBTEQ7QUFNRyxFQXpCaUM7QUEwQnJDLFNBQVEsa0JBQVU7QUFDakI7QUFDQSxNQUFJLFFBQVEsSUFBWjtBQUNBLE1BQUksb0JBQXFCLGdCQUFNLFFBQU4sQ0FBZSxHQUFmLENBQW1CLEtBQUssS0FBTCxDQUFXLFFBQTlCLEVBQXdDLFVBQVMsS0FBVCxFQUFlO0FBQy9FLFVBQU8sZ0JBQU0sWUFBTixDQUFtQixLQUFuQixFQUEwQjtBQUNoQyxjQUFVLE1BQU0sS0FBTixDQUFZOztBQURVLElBQTFCLENBQVA7QUFJQSxHQUx3QixDQUF6Qjs7QUFRQSxTQUFPO0FBQUE7QUFBQTtBQUFPO0FBQVAsR0FBUDtBQUNBO0FBdENvQyxDQUFsQixDQUFwQjs7a0JBeUNlLGE7Ozs7Ozs7OztBQzVDZDs7Ozs7O0FBRUQsSUFBSSxjQUFjLGdCQUFNLFdBQU4sQ0FBa0I7QUFBQTs7QUFDbkMsWUFBVztBQUNWLFlBQVUsZ0JBQU0sU0FBTixDQUFnQjtBQURoQixFQUR3QjtBQUluQyxTQUFRLGtCQUFVO0FBQ2pCLE1BQUksUUFBUSxJQUFaO0FBQ0EsTUFBSSxZQUFZLEVBQWhCOztBQUVBLE1BQUcsTUFBTSxLQUFOLENBQVksUUFBWixJQUF3QixNQUFNLEtBQU4sQ0FBWSxRQUFaLENBQXFCLElBQWhELEVBQXNEO0FBQ3JELGVBQVksTUFBTSxLQUFOLENBQVksUUFBWixDQUFxQixJQUFyQixDQUEwQixHQUExQixDQUE4QixVQUFTLElBQVQsRUFBYyxDQUFkLEVBQWdCO0FBQ3hELFdBQVE7QUFBQTtBQUFBLE9BQUksS0FBSyxDQUFUO0FBQ1A7QUFBQTtBQUFBO0FBQU8sV0FBSztBQUFaLE1BRE87QUFFUDtBQUFBO0FBQUE7QUFBTyxXQUFLO0FBQVo7QUFGTyxLQUFSO0FBSUQsSUFMVyxDQUFaO0FBTUE7O0FBRUQsU0FBTztBQUFBO0FBQUE7QUFBSyxZQUFMO0FBQUE7QUFBQSxHQUFQO0FBQ0E7QUFsQmtDLENBQWxCLENBQWxCOztrQkFxQmUsVzs7Ozs7QUN2QmY7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFHQSxtQkFBUyxNQUFULENBQ0M7QUFBQTtBQUFBO0FBQ0M7QUFERCxDQURELEVBSUMsU0FBUyxjQUFULENBQXdCLE9BQXhCLENBSkQiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiXG4gaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuXG52YXIgTW9ja0NvbXBvbmVudCA9IFJlYWN0LmNyZWF0ZUNsYXNzKHtcblx0Z2V0SW5pdGlhbFN0YXRlOiBmdW5jdGlvbigpe1xuICAgIFx0cmV0dXJuIHtcbiAgICBcdFx0aW5pdERhdGE6IHt9XG4gICAgXHR9O1xuICAgIH0sXG4gICAgY29tcG9uZW50V2lsbE1vdW50OiBmdW5jdGlvbigpe1xuICAgIFx0dmFyIF90aGlzID0gdGhpcztcblx0XHRNb2NrLnNldHVwKHtcblx0XHQgICAgdGltZW91dDogJzIwMC02MDAnXG5cdFx0fSk7XG5cblx0XHRNb2NrLm1vY2soL1xcLmpzb24vLCB7XG5cdFx0ICAgICdsaXN0fDEtMTAnOiBbe1xuXHRcdCAgICAgICAgJ2lkfCsxJzogMSxcblx0XHQgICAgICAgICdlbWFpbCc6ICdARU1BSUwnXG5cdFx0ICAgIH1dXG5cdFx0fSk7XG5cblx0XHQkLmFqYXgoe1xuXHRcdCAgICB1cmw6ICdoZWxsby5qc29uJyxcblx0XHQgICAgZGF0YVR5cGU6ICdqc29uJ1xuXHRcdH0pLmRvbmUoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBqcVhIUil7XG5cdFx0ICAgIF90aGlzLnNldFN0YXRlKHtpbml0RGF0YTogZGF0YX0pO1xuXHRcdH0pO1xuICAgIH0sXG5cdHJlbmRlcjogZnVuY3Rpb24oKXtcblx0XHQvL21vcmUgdGhhbiBvbmUgY2hpbGRcblx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdHZhciBjaGlsZHJlbldpdGhQcm9wcyA9ICBSZWFjdC5DaGlsZHJlbi5tYXAodGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24oY2hpbGQpe1xuXHRcdFx0cmV0dXJuIFJlYWN0LmNsb25lRWxlbWVudChjaGlsZCwge1xuXHRcdFx0XHRpbml0RGF0YTogX3RoaXMuc3RhdGUuaW5pdERhdGFcblx0XHRcdFx0XG5cdFx0XHR9KTtcblx0XHR9KTtcblxuXHRcdFxuXHRcdHJldHVybiA8ZGl2PnsgY2hpbGRyZW5XaXRoUHJvcHMgfTwvZGl2PlxuXHR9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTW9ja0NvbXBvbmVudDtcblxuXG5cblxuIiwiIGltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcblxudmFyIE15Q29tcG9uZW50ID0gUmVhY3QuY3JlYXRlQ2xhc3Moe1xuXHRwcm9wVHlwZXM6IHtcblx0XHRpbml0RGF0YTogUmVhY3QuUHJvcFR5cGVzLmFycmF5XG5cdH0sXG5cdHJlbmRlcjogZnVuY3Rpb24oKXtcblx0XHR2YXIgX3RoaXMgPSB0aGlzO1xuXHRcdHZhciBsaXN0SXRlbXMgPSBbXVxuXG5cdFx0aWYoX3RoaXMucHJvcHMuaW5pdERhdGEgJiYgX3RoaXMucHJvcHMuaW5pdERhdGEubGlzdCkge1xuXHRcdFx0bGlzdEl0ZW1zID0gX3RoaXMucHJvcHMuaW5pdERhdGEubGlzdC5tYXAoZnVuY3Rpb24oaXRlbSxpKXtcblx0XHRcdCAgcmV0dXJuICg8bGkga2V5PXtpfT5cblx0XHRcdCAgXHQ8c3Bhbj57aXRlbS5pZH08L3NwYW4+XG5cdFx0XHQgIFx0PHNwYW4+e2l0ZW0uZW1haWx9PC9zcGFuPlxuXHRcdFx0ICA8L2xpPilcdFxuXHRcdFx0fSk7XG5cdFx0fVxuXHRcdFxuXHRcdHJldHVybiA8dWw+e2xpc3RJdGVtc30gbGFsYWx1bzE8L3VsPlxuXHR9XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgTXlDb21wb25lbnQ7IiwiaW1wb3J0IEluZGV4IGZyb20gJy4vY29tcG9uZW50cy9pbmRleC9Sb290Q29tcG9uZW50JztcbmltcG9ydCBNb2NrIGZyb20gJy4vY29tcG9uZW50cy9pbmRleC9Nb2NrQ29tcG9uZW50JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0LWRvbSc7XG5cblJlYWN0RE9NLnJlbmRlcihcblx0PE1vY2s+XG5cdFx0PEluZGV4Lz5cblx0PC9Nb2NrPixcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2luZGV4JylcbikiXX0="}